<Monitoring>
    <Host address="84.201.161.241" comment="usershandler">
        <!--   <Startup> tail -f /var/log/yandex/maps/analyzer/usershandler.log | /home/ligreen/user_age_mon.sh > /tmp/s.log</Startup>
           <Startup> while true; do /home/ligreen/log.sh; sleep 1; done </Startup> -->
        <CPU measure="idle,user,system,iowait" />
        <System measure="la1,csw,int,numproc,numthreads" />
        <Memory measure="free,used,cached,buff" />
        <!--   <Custom measure="call" label="group1_usershandler-average-task-age"> tail -n1 /tmp/s1.log </Custom> -->
        <!--   <Custom measure="call" label="group1_usershandler_oldest-task-age"> curl -s usershandler.alz02g.load.maps.yandex.net/info | json /dev/stdin "rtp.oldest_task_age" </Custom> -->
        <Custom measure="call" label="group1_segmentshandler_oldest-task-age"> curl -s segmentshandler.alz02g.load.maps.yandex.net/info | json /dev/stdin "rtp.oldest_task_age" </Custom>
        <Custom measure="call" label="yacare-segmentshandler-rss.size"> for c in `pgrep -f analyzer-segmentshandler`; do awk '{print $2*4096}' /proc/$c/statm; done | awk '{a=a+$1} END {print a}' </Custom>
        <Net measure="recv,send,retransmit,estab,closewait,timewait"/>
        <Disk />
        <!--   <Shutdown>rm /tmp/s.log</Shutdown> -->
    </Host>
    <Host address="alz01g.load.maps.yandex.net" comment="usershandler">
        <!--   <Startup> while true; do /home/ligreen/log.sh; sleep 1; done </Startup> -->
        <CPU measure="idle,user,system,iowait" />
        <System measure="la1,csw,int,numproc,numthreads" />
        <Memory measure="free,used,cached,buff" />
        <!--   <Custom measure="call" label="group1_usershandler-average-task-age"> tail -n1 /tmp/s1.log </Custom> -->
        <!--   <Custom measure="call" label="group1_usershandler_oldest-task-age"> curl -s usershandler.alz01g.load.maps.yandex.net/info | json /dev/stdin "rtp.oldest_task_age" </Custom> -->
        <Custom measure="call" label="group1_segmentshandler_oldest-task-age"> curl -s segmentshandler.alz01g.load.maps.yandex.net/info | json /dev/stdin "rtp.oldest_task_age" </Custom>
        <Net measure="recv,send,retransmit,estab,closewait,timewait"/>
        <Disk />
    </Host>
    <Host address="alz01g.load.dtst.maps.yandex.net" comment="usershandler">
        <!--   <Startup> while true; do /home/ligreen/log.sh; sleep 1; done </Startup> -->
        <CPU measure="idle,user,system,iowait" />
        <System measure="la1,csw,int,numproc,numthreads" />
        <Memory measure="free,used,cached,buff" />
        <!--   <Custom measure="call" label="group1_usershandler-Signal-Age"> tail -n1 /tmp/s1.log </Custom>
           <Custom measure="call" label="group1_segmentshandler-Signal-Age"> tail -n1 /tmp/s2.log </Custom> -->
        <Net measure="recv,send,retransmit,estab,closewait,timewait"/>
        <Custom measure="call" label="group1_segmentshandler_oldest-task-age"> curl -s segmentshandler.alz01g.load.dtst.maps.yandex.net/info | json /dev/stdin "rtp.oldest_task_age" </Custom>
        <Custom measure="call" label="yacare-segmentshandler-rss.size"> for c in `pgrep -f analyzer-segmentshandler`; do awk '{print $2*4096}' /proc/$c/statm; done | awk '{a=a+$1} END {print a}' </Custom>
        <Disk />
    </Host>
</Monitoring>



        <!--<Monitoring>-->
    <!--<Host address="bus-receiver02g.load.maps.yandex.net" telegraph="/usr/local/bin/telegraf">-->
        <!--<CPU measure="user,system,idle,iowait"/>-->
        <!--<System measure="la1,la5,la15,csw,int"/>-->
        <!--<Memory measure="free,used,cached,buff"/>-->
        <!--<Disk measure="read,write"/>-->
        <!--<Net measure="recv,send,retransmit,estab,closewait,timewait"/>-->
        <!--<Custom measure="call" label="accept_pool.load"> curl -s -H 'Host: bus-receiver.maps.yandex.ru' 'http://localhost:6100/stat' | python -c 'import sys, json; j = json.load(sys.stdin); print "\n".join(`c["values"]["now"]` for c in j["charts"] if c["name"] == "accept.load")'</Custom>-->
        <!--<Custom measure="call" label="group1_prognosis.size"> mongo &#45;&#45;quiet localhost:27077/mtprognosis2 &#45;&#45;eval "db['mtprognosis'].count()*1.0" </Custom>-->
        <!--<Custom measure="call" label="group1_trajectories.size"> mongo &#45;&#45;quiet localhost:27077/mtprognosis2 &#45;&#45;eval "db['links'].count()*1.0" </Custom>-->
        <!--<Custom measure="call" label="group1_signals.size"> mongo &#45;&#45;quiet localhost:27077/mtprognosis2 &#45;&#45;eval "db['signals'].count()*1.0" </Custom>-->
        <!--<Custom measure="call" label="localqueue-wait-time"> curl -s -H 'Host: bus-receiver.maps.yandex.ru' 'http://localhost:6100/stat'  | python -c 'import sys, json; j = json.load(sys.stdin); print "\n".join(`c["values"]["accept"]` for c in j["charts"] if c["name"] == "localqueue_wait_time")' </Custom>-->
    <!--</Host>-->
    <!--<Host address="bus-mrs03g.load.maps.yandex.net" telegraph="/usr/local/bin/telegraf">-->
        <!--<CPU measure="user,system,idle,iowait"/>-->
        <!--<System measure="la1,la5,la15,csw,int"/>-->
        <!--<Memory measure="free,used,cached,buff"/>-->
        <!--<Disk measure="read,write"/>-->
        <!--<Net measure="recv,send,retransmit,estab,closewait,timewait"/>-->
    <!--</Host>-->
<!--</Monitoring>-->